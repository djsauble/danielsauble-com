---
import { Image } from 'astro:assets';
import TimelineItem from "../components/timeline_item.astro";
import "../styles/index.css";
import Layout from '../layouts/Layout.astro';

import prefectImage from '../../public/images/prefect/13_prototype_hover_over_run.png';
import endorLabsImage from '../../public/images/endor_labs/05_dependency_graph.png';
import iterativeImage from '../../public/images/iterative/04_remote_code_execution.png';
import vectorDbImage from '../../public/images/vector_db/01_new_landing_page.png';
import developerImage from '../../public/images/developer/home_page_dark_mode.png';
import packageFilteringImage from '../../public/images/package_filtering/admin.png';
import ppmImage from '../../public/images/ppm/patch_manager.png';
import browseImage from '../../public/images/browse/tree_browsing.png';
import runbudgetImage from '../../public/images/runbudget/forrest_cruise.png';

const pageTitle = "Daniel Sauble";

const timelineItemsOriginal = [
  {
    year: 2025,
    title: "Prefect",
    description: "Visualize the state of your orchestrated flows",
    to: "/prefect",
    image: prefectImage,
    highlight: true,
  },
  {
    year: 2023,
    title: "Iterative",
    description: "Remote code execution for ML models",
    to: "/iterative",
    image: iterativeImage,
  },
  {
    year: 2022,
    title: "Endor Labs",
    description: "Secure your software supply chain",
    to: "/endor_labs",
    image: endorLabsImage,
    highlight: true,
  },
  {
    year: 2021,
    title: "DataStax",
    description: "Learn how to use a vector database",
    to: "/vector_db",
    image: vectorDbImage,
  },
  {
    year: 2020,
    title: "New Relic",
    description: "Learn how to build custom apps on the New Relic platform",
    to: "/developer",
    image: developerImage,
  },
  {
    year: 2019,
    title: "npm",
    description: "Keep bad npm packages out of your applications",
    to: "/package_filtering",
    image: packageFilteringImage,
  },
  {
    year: 2018,
    title: "Sonatype",
    description: "Peruse the contents of your software repositories in a structured way",
    to: "/browse",
    image: browseImage,
  },
  {
    year: 2017,
    title: "Personal project",
    description: "Visualization tool to help long-distance runners build their mileage safely",
    to: "/runbudget",
    image: runbudgetImage,
  },
  {
    year: 2014,
    title: "Puppet",
    description: "Easily patch your IT systems with an existing configuration management tool",
    to: "/ppm",
    image: ppmImage,
    highlight: true,
  },
];

// Get query parameters
const filterParam = Astro.url.searchParams.get('filter');
const sortParam = Astro.url.searchParams.get('sort');

// Start with a mutable copy of the original items
let processedItems = [...timelineItemsOriginal];

// 1. Apply Filtering
if (filterParam === 'highlights') {
  processedItems = processedItems.filter(item => item.highlight === true);
}

// 2. Apply Sorting
if (sortParam === 'chronological') {
  processedItems.sort((a, b) => a.year - b.year);
} else {
  processedItems.sort((a, b) => b.year - a.year);
}
---

<Layout title={pageTitle}>
  <h1>Projects</h1>

  <p>
    <a href="?filter=highlights">Highlights</a> ·
    <a href="?sort=reverse-chronological">Reverse Chronological</a> ·
    <a href="?sort=chronological">Chronological</a>
    </p>

  <div class="timeline">
    {processedItems.map((item) => (
      <TimelineItem
        year={item.year}
        title={item.title}
        description={item.description}
        to={item.to}
        image={item.image}
        // Pass `highlight={item.highlight}` if your TimelineItem component uses it for styling
      />
    ))}
  </div>
</Layout>
